@use "sass:math";

@import "./settings.scss";
@import "./fonts/fonts.scss";

// Reset and general parameters ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "./base/null.scss";

body {
  &._lock {
    overflow: hidden;
    touch-action: none;
  }
}
// Wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
  // min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;

  > main {
    flex: 1 1 auto;
  }

  > * {
    min-width: 0;
  }
}

hr {
  border: 1px solid rgb(239, 239, 239);
}

.wrapper2 {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

// Responsive container ======================================================================================================================================================================================================================

@if ($responsiveType==1) {
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
} @else {
  [class*="__container"] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

section:first-child {
  @include adaptiveValue("margin-top", 32.5, 26.5);
}

section:last-child {
  @include adaptiveValue("margin-bottom", 108.5, 69);
}

section:not(:first-child) {
  @include adaptiveValue("margin-top", 110, 70);
}

section:not(:last-child) {
  @include adaptiveValue("margin-bottom", 110, 70);
}

h1,
.title-1 {
  @include adaptiveValue("font-size", 96, 78, 480, 320, 1);
  font-weight: 600;
  line-height: 1;
  letter-spacing: em(0.396, 198);
  text-transform: uppercase;
  color: var(--color-text);

  @include phone-landscape {
    @include adaptiveValue("font-size", 193.9, 70.6, $containerWidth, 480, 1);
  }
}

h2,
.title-2 {
  @include adaptiveValue("font-size", 64, 32);
  font-weight: 500;
  line-height: 87%;
  letter-spacing: em(0.128, 64);
  color: var(--color-text);
}

.title-2--reverse {
  line-height: normal;
  color: var(--color-text-reverse);
}

h3,
.title-3 {
  font-size: 24px;
  font-weight: 600;
  line-height: 1.29;
  letter-spacing: 0%;
  text-transform: capitalize;
  color: var(--color-text);
}

h4,
.title-4 {
  font-size: 16px;
  font-weight: 600;
  line-height: normal;
  text-transform: uppercase;
  color: var(--color-text);
}

h5,
.title-5 {
  font-size: 12px;
  font-weight: 400;
  line-height: normal;
  text-transform: initial;
  color: var(--color-text-muted);
}

.text-muted {
  @include adaptiveValue("font-size", 16, 12);
  color: var(--color-text-muted);
}

.text-light {
  @include adaptiveValue("font-size", 16, 12);
  color: var(--color-text-reverse);
}

.text-reverse {
  @include adaptiveValue("font-size", 24, 12);
  font-weight: 500;
  color: var(--color-text-reverse);
}

.button-wrapper {
  display: inline-flex;
  position: relative;
}

.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  gap: 5px;
  @include adaptiveValue("font-size", 16, 12);
  font-weight: 600;
  border-radius: 12px;
  text-transform: capitalize;
  transition: all 0.3s ease;

  &_lg {
    line-height: 87%;
    letter-spacing: percent(0.032, 16);
    @include adaptiveValue("padding-top", 16, 14);
    @include adaptiveValue("padding-bottom", 16, 14);
    @include adaptiveValue("padding-right", 32, 20);
    @include adaptiveValue("padding-left", 32, 20);
  }

  &_md {
    @include adaptiveValue("padding-top", 16, 8);
    @include adaptiveValue("padding-bottom", 16, 8);
    @include adaptiveValue("padding-right", 36, 18);
    @include adaptiveValue("padding-left", 36, 18);
  }

  &_default {
    color: var(--color-text-reverse);
    background-color: var(--color-background);

    .icon-arrow {
      @include adaptiveValue("font-size", 16, 8);
      @include adaptiveValue("margin-left", 10, 5);
    }

    // TODO
    &:active {
      color: var(--color-text-accent);
      background-color: var(--color-background-reverse);
    }

    @include hover {
      color: var(--color-text-reverse);
      background-color: var(--color-background-secondary);
    }
  }

  &_reverse {
    color: var(--color-text-accent);
    background-color: var(--color-background-reverse);

    // TODO
    &:active {
      color: var(--color-text-reverse);
      background-color: var(--color-background);
    }
  }

  &_transparent {
    border: 2px solid var(--color-border-reverse);
    color: var(--color-text-reverse);
    background-color: transparent;

    .icon-arrow {
      @include adaptiveValue("font-size", 16, 8);
      @include adaptiveValue("margin-left", 10, 5);
    }
  }

  &_ghost {
    outline: 2px solid var(--color-primary);
    background-color: transparent;

    .icon-arrow {
      font-size: 12px;
      margin-right: 8px;
    }
  }

  &_light {
    color: var(--color-text-accent);
    background-color: var(--color-background-reverse);
  }

  &_authorization {
    width: 100%;
  }

  &__icon {
    width: 20px;
    height: 20px;
  }
}

.button__checkout {
  width: 100%;
}

.title-block {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 10px;
  margin-bottom: 42px;
}

.ibg {
  position: relative;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;

  & > img:first-child {
    width: 0;
    height: 0;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    visibility: hidden;
  }
}

.logo {
  &__link {
    font-size: initial;
  }
}

.dropdown {
  font-family: "TT Firs Neue";
  color: var(--color-system-grey);
  font-size: 16px;
}

.radiobutton {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  border: 1px solid var(--color-secondary-grey);
  border-radius: 50%;
  width: 16px;
  height: 16px;
  outline: none;
  cursor: pointer;

  &:checked {
    border: 4px solid var(--color-accent);
  }
}

.checkbox {
  width: 20px;
  height: 20px;
  background-color: #ccc;
  border-radius: 4px;
  display: inline-block;
}

.checkbox:checked + label::before {
  background-color: var(--color-accent);
}

.breadcrumbs {
  grid-column: 1 / -1;

  display: flex;
  flex-direction: row;
  align-items: center;
  flex-wrap: wrap;
  gap: 8px;

  &__breadcrumb {
    font-size: 12px;
    display: block;
  }

  &__slash {
    color: var(--color-system-grey);
  }
}

.form {
  display: flex;
  flex-direction: column;
  gap: 16px;

  &__input-wrapper {
    display: flex;
    flex-direction: row;
    gap: 16px;
  }

  &__input {
    font-family: "TT Firs Neue";
    font-size: 16px;
    border-radius: 10px;
    background: rgb(249, 249, 249);
    height: 53px;
    width: 100%;
    padding: 10px 20px 10px 20px;
    color: #757575;
  }

  &__input:focus {
    border: 2px solid #9b9b9b;
    border-color: #9b9b9b;
  }

  &__input-wrapper {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .error-input {
    color: rgb(220, 21, 21);
    border: 2px solid transparent;
    border-color: rgb(220, 21, 21);
  }

  .error {
    color: rgb(220, 21, 21);
  }
}
